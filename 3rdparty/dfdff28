  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.cloudscreen.log.CloudPolicyLog.session_id)
}
inline ::std::string* CloudPolicyLog::mutable_session_id() {
  
  // @@protoc_insertion_point(field_mutable:com.cloudscreen.log.CloudPolicyLog.session_id)
  return session_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CloudPolicyLog::release_session_id() {
  // @@protoc_insertion_point(field_release:com.cloudscreen.log.CloudPolicyLog.session_id)
  
  return session_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CloudPolicyLog::set_allocated_session_id(::std::string* session_id) {
  if (session_id != NULL) {
    
  } else {
    
  }
  session_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session_id);
  // @@protoc_insertion_point(field_set_allocated:com.cloudscreen.log.CloudPolicyLog.session_id)
}

// string traffic_id = 120;
inline void CloudPolicyLog::clear_traffic_id() {
  traffic_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CloudPolicyLog::traffic_id() const {
