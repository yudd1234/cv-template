}
inline ::std::string* CloudPolicyLog::mutable_policy() {
  
  // @@protoc_insertion_point(field_mutable:com.cloudscreen.log.CloudPolicyLog.policy)
  return policy_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CloudPolicyLog::release_policy() {
  // @@protoc_insertion_point(field_release:com.cloudscreen.log.CloudPolicyLog.policy)
  
  return policy_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CloudPolicyLog::set_allocated_policy(::std::string* policy) {
  if (policy != NULL) {
    
  } else {
    
  }
  policy_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), policy);
  // @@protoc_insertion_point(field_set_allocated:com.cloudscreen.log.CloudPolicyLog.policy)
}

// string trigger_time = 200;
inline void CloudPolicyLog::clear_trigger_time() {
  trigger_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CloudPolicyLog::trigger_time() const {
  // @@protoc_insertion_point(field_get:com.cloudscreen.log.CloudPolicyLog.trigger_time)
  return trigger_time_.GetNoArena();
}
inline void CloudPolicyLog::set_trigger_time(const ::std::string& value) {
