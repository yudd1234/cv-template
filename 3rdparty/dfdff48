  // @@protoc_insertion_point(field_set_char:com.cloudscreen.log.CloudPolicyLog.reserve_content1)
}
inline void CloudPolicyLog::set_reserve_content1(const char* value, size_t size) {
  
  reserve_content1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.cloudscreen.log.CloudPolicyLog.reserve_content1)
}
inline ::std::string* CloudPolicyLog::mutable_reserve_content1() {
  
  // @@protoc_insertion_point(field_mutable:com.cloudscreen.log.CloudPolicyLog.reserve_content1)
  return reserve_content1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CloudPolicyLog::release_reserve_content1() {
  // @@protoc_insertion_point(field_release:com.cloudscreen.log.CloudPolicyLog.reserve_content1)
  
  return reserve_content1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CloudPolicyLog::set_allocated_reserve_content1(::std::string* reserve_content1) {
  if (reserve_content1 != NULL) {
    
  } else {
    
  }
  reserve_content1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reserve_content1);
  // @@protoc_insertion_point(field_set_allocated:com.cloudscreen.log.CloudPolicyLog.reserve_content1)
}

// uint64 reserve_id2 = 250;
inline void CloudPolicyLog::clear_reserve_id2() {
